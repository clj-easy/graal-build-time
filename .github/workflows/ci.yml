name: Test and Deploy

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Babashka
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          bb: 'latest'

      - name: Apply Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.deps.clj
            ~/.gitlibs
          key: lint-graal-build-time-${{ hashFiles('deps.edn','bb.edn') }}
          restore-keys: "lint-graal-build-time-"

      - name: Lint
        run: bb lint

  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu'
          - 'windows'
        distribution:
          - 'graalvm'
          - 'graalvm-community'
        java-version:
          - '22.0.2'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.distribution }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Babashka
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          bb: 'latest'

      - name: Tools versions
        run: |
          java --version
          bb --version

      - name: Apply Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.deps.clj
            ~/.gitlibs
          key: ${{ runner.os }}-graal-build-time-${{ hashFiles('**/deps.edn') }}
          restore-keys: ${{ runner.os }}-graal-build-time-

      - name: Run tests
        run: bb test

      - name: Run native tests
        run: bb native-image-test

  deploy:
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Babashka
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          bb: 'latest'

      # any JDK > JDK8 will do to compile sources, but let's deliberately choose one
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Tools versions
        run: |
          java --version
          bb --version

      - name: Apply Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.deps.clj
            ~/.gitlibs
          key: ${{ runner.os }}-graal-build-time-${{ hashFiles('**/deps.edn') }}
          restore-keys: ${{ runner.os }}-graal-build-time-

      - name: Deploy to clojars
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_ORG_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_ORG_PASSWORD }}
        run: bb deploy
